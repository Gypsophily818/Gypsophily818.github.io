{"version":3,"sources":["component/CCYitem.jsx","component/InputTask.jsx","component/CurrencyRate.jsx","component/PlanList.jsx","component/Plan.jsx","component/Finished.jsx","App.js","api/getForex.js","reportWebVitals.js","index.js"],"names":["CCYitem","props","className","onClick","e","clickCCY","ccy","InputTask","useState","value","setValue","showCCY","setShowCCY","task","useRef","enterPrice","currency","setNewplan","formatMoney","price","toPrecision","type","placeholder","ref","onChange","target","preventDefault","CCY","map","item","index","v","current","rate","getval","console","log","isNaN","alert","id","Date","now","finished","plan","RUB","CNY","previous","USD","addPlan","addPlanHander","CurrencyRate","toFixed","RUB_USD","CNY_USD","PlanList","checked","clickPlan","Plan","unfinished","job","filter","getSum","CCYType","length","sum","Number","Finished","params","App","setRate","setJob","useEffect","fetch","then","response","json","resolve","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5769147b.chunk.js","sourcesContent":["export default function CCYitem(props) {\r\n  return (\r\n    <li\r\n      className=\"ccy-item\"\r\n      onClick={(e) => {\r\n        props.clickCCY(props.ccy);\r\n      }}\r\n    >\r\n      {props.ccy}\r\n    </li>\r\n  );\r\n}\r\n","import CCYitem from \"./CCYitem\";\r\nimport { useRef, useState } from \"react\";\r\n\r\nexport default function InputTask(props) {\r\n  const [value, setValue] = useState(\"\");\r\n  const [showCCY, setShowCCY] = useState(false);\r\n  const task = useRef(null);\r\n  const enterPrice = useRef(null);\r\n  const currency = useRef(null);\r\n  const [newPlan, setNewplan] = useState({});\r\n\r\n  const clickCCY = (v) => {\r\n    // 显示隐藏\r\n    setShowCCY(false);\r\n    // 选择货币类型\r\n    setValue(v);\r\n  };\r\n  function formatMoney(price) {\r\n    // formatMoney\r\n    return price.toPrecision(6);\r\n  }\r\n\r\n  function addPlanHander() {\r\n    let price = enterPrice.current.value * 1; //当前填入价格\r\n    const rate = props.rate; //汇率\r\n    let getval = {};\r\n    console.log(price);\r\n    // console.log(task.current.value, price, currency);\r\n    if (\r\n      typeof price !== \"number\" ||\r\n      isNaN(price) ||\r\n      price === 0 ||\r\n      task.current.value === \"\" ||\r\n      currency.current.value === \"\"\r\n    ) {\r\n      return alert(\"请确认输入格式~\");\r\n    }\r\n    if (currency.current.value === \"RUB\") {\r\n      //卢币单位为1时\r\n      setNewplan({\r\n        // { id: 5, finished: false, plan: \"去学习\" },\r\n        id: Date.now(),\r\n        finished: false,\r\n        plan: task.current.value,\r\n        RUB: price,\r\n        CNY: formatMoney(price / rate.RUB.previous),\r\n        USD: formatMoney((price / rate.RUB.previous) * rate.USD.previous),\r\n      });\r\n      getval = {\r\n        // { id: 5, finished: false, plan: \"去学习\" },\r\n        id: Date.now(),\r\n        finished: false,\r\n        plan: task.current.value,\r\n        RUB: price,\r\n        CNY: formatMoney(price / rate.RUB.previous),\r\n        USD: formatMoney((price / rate.RUB.previous) * rate.USD.previous),\r\n      };\r\n    } else if (currency.current.value === \"CNY\") {\r\n      //人民币单位为1时\r\n      setNewplan({\r\n        id: Date.now(),\r\n        finished: false,\r\n        plan: task.current.value,\r\n        RUB: formatMoney(price * rate.RUB.previous),\r\n        CNY: price,\r\n        USD: formatMoney(price * rate.USD.previous),\r\n      });\r\n      getval = {\r\n        id: Date.now(),\r\n        finished: false,\r\n        plan: task.current.value,\r\n        RUB: formatMoney(price * rate.RUB.previous),\r\n        CNY: price,\r\n        USD: formatMoney(price * rate.USD.previous),\r\n      };\r\n    } else {\r\n      //美元单位为1时\r\n      setNewplan({\r\n        id: Date.now(),\r\n        finished: false,\r\n        plan: task.current.value,\r\n        RUB: formatMoney((price / rate.USD.previous) * rate.RUB.previous),\r\n        CNY: formatMoney(price / rate.USD.previous),\r\n        USD: price,\r\n      });\r\n      getval = {\r\n        id: Date.now(),\r\n        finished: false,\r\n        plan: task.current.value,\r\n        RUB: formatMoney((price / rate.USD.previous) * rate.RUB.previous),\r\n        CNY: formatMoney(price / rate.USD.previous),\r\n        USD: price,\r\n      };\r\n    }\r\n    // 添加\r\n    // newPlan && console.log(\"addPlan\", newPlan);\r\n    props.addPlan(getval);\r\n    // 重置\r\n    enterPrice.current.value = \"\";\r\n    task.current.value = \"\";\r\n    currency.current.value = \"\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"Task-header\">\r\n      <div className=\"left\">\r\n        <input className=\"task\" type=\"text\" placeholder=\"任务\" ref={task} />\r\n        <input\r\n          className=\"price\"\r\n          type=\"text\"\r\n          placeholder=\"价格\"\r\n          ref={enterPrice}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"select-box\">\r\n        <input\r\n          className=\"currency\"\r\n          value={value}\r\n          onChange={(e) => {\r\n            e.target.value = value;\r\n          }}\r\n          type=\"text\"\r\n          placeholder=\"货币类型\"\r\n          ref={currency}\r\n        />\r\n\r\n        <span\r\n          className=\"icon\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            // console.log(showCCY);\r\n            showCCY ? setShowCCY(false) : setShowCCY(true);\r\n          }}\r\n        >\r\n          ▽\r\n        </span>\r\n        {showCCY ? (\r\n          <ul className=\"select-CCY\">\r\n            {props.CCY.map((item, index) => (\r\n              <CCYitem\r\n                key={index}\r\n                ccy={item}\r\n                showCCY={setShowCCY}\r\n                clickCCY={(item) => {\r\n                  clickCCY(item);\r\n                }}\r\n              ></CCYitem>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n      <button\r\n        className=\"add\"\r\n        onClick={() => {\r\n          addPlanHander();\r\n        }}\r\n      >\r\n        添加\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","export default function CurrencyRate(props) {\r\n  function RUB_CNY(rate) {\r\n    // 人民币=>卢布\r\n    return rate.rate.RUB.previous.toFixed(3);\r\n  }\r\n  function RUB_USD(rate) {\r\n    // 美元=>卢布\r\n    // (1 / USD.previous) * RUB.previous;\r\n    return ((1 / rate.rate.USD.previous) * rate.rate.RUB.previous).toFixed(3);\r\n  }\r\n  function CNY_USD(rate) {\r\n    // 美元=>人民币\r\n    // 1/USD.previous\r\n    return (1 / rate.rate.USD.previous).toFixed(3);\r\n  }\r\n  return (\r\n    <div className=\"rate-box\">\r\n      <span className=\"currency-rate\">{RUB_CNY(props)}₽/￥</span>\r\n      <span className=\"currency-rate\">{RUB_USD(props)}₽/$</span>\r\n      <span className=\"currency-rate\">{CNY_USD(props)}￥/$</span>\r\n    </div>\r\n  );\r\n}\r\n","export default function PlanList(props) {\r\n  // const { finish, plan } = props.job;\r\n  function clickCheckbox() {\r\n    //点击完成和未完成\r\n    props.clickPlan(props.id);\r\n  }\r\n  /* ₽/￥  ₽/$ ￥/$ \r\n\t\t RUB   CNY USD\r\n\t*/\r\n\r\n  return (\r\n    <li>\r\n      <input\r\n        className=\"checkbox\"\r\n        type=\"checkbox\"\r\n        // defaultChecked=\"checked\"\r\n        checked={props.finished}\r\n        onChange={clickCheckbox}\r\n      />\r\n      <span\r\n        className=\"Plan-text\"\r\n        className={props.finished ? \"is-finished\" : \"\"}\r\n      >\r\n        {props.plan}\r\n      </span>\r\n      <div className=\"plan-money\">\r\n        <span className=\"plan-RUB\">₽{props.RUB}</span>\r\n        <span className=\"plan-CNY\">￥{props.CNY}</span>\r\n        <span className=\"plan-USD\">${props.USD}</span>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n","import PlanList from \"./PlanList\";\r\n\r\nexport default function Plan(props) {\r\n  const [RUB, CNY, USD] = props.CCY;\r\n  function unfinished() {\r\n    //过滤未完成\r\n    return props.job.filter((item) => {\r\n      return !item.finished;\r\n    });\r\n  }\r\n  console.log(props.job);\r\n\r\n  function getSum(CCYType) {\r\n    if (unfinished().length !== 0) {\r\n      let sum = 0;\r\n      for (const price in unfinished()) {\r\n        console.log(unfinished()[price][CCYType]);\r\n        sum += Number(unfinished()[price][CCYType]);\r\n      }\r\n      return sum;\r\n    }\r\n  }\r\n  return (\r\n    <ul className=\"plan-box\">\r\n      <p className=\"title-plan\">计划:</p>\r\n      {unfinished().map((item) => {\r\n        // return item.finished === true;\r\n        return (\r\n          <PlanList\r\n            key={item.id}\r\n            {...item}\r\n            clickPlan={props.clickPlan}\r\n            rate={props.rate}\r\n          />\r\n        );\r\n      })}\r\n      <p className=\"total\">\r\n        将要花费:\r\n        <span className=\"plan-USD\">${getSum(USD) ? getSum(USD) : 0}</span>\r\n        <span className=\"plan-CNY\">￥{getSum(CNY) ? getSum(CNY) : 0}</span>\r\n        <span className=\"plan-RUB\">₽{getSum(RUB) ? getSum(RUB) : 0}</span>\r\n      </p>\r\n    </ul>\r\n  );\r\n}\r\n","import PlanList from \"./PlanList\";\r\n\r\nexport default function Finished(props) {\r\n  const [RUB, CNY, USD] = props.CCY;\r\n\r\n  function finished(params) {\r\n    return props.job.filter((item) => {\r\n      return item.finished;\r\n    });\r\n  }\r\n  function formatMoney(price) {\r\n    // 格式化价格\r\n    return price.toPrecision(6);\r\n  }\r\n  function getSum(CCYType) {\r\n    // 计算总值\r\n    if (finished().length !== 0) {\r\n      let sum = 0;\r\n      for (const price in finished()) {\r\n        console.log(finished()[price][CCYType]);\r\n        sum += Number(finished()[price][CCYType]);\r\n      }\r\n      return formatMoney(sum);\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <ul className=\"plan-box\">\r\n        <p className=\"title-plan\">已完成:</p>\r\n        {finished().map((item) => {\r\n          return (\r\n            <PlanList\r\n              key={item.id}\r\n              {...item}\r\n              clickPlan={props.clickPlan}\r\n              rate={props.rate}\r\n            />\r\n          );\r\n        })}\r\n        <p className=\"total\">\r\n          一共花了:\r\n          {/* <span className=\"plan-USD\">$0.01323</span>\r\n          <span className=\"plan-CNY\">￥0.08707</span>\r\n          <span className=\"plan-RUB\">₽1</span> */}\r\n          <span className=\"plan-USD\">${getSum(USD) ? getSum(USD) : 0}</span>\r\n          <span className=\"plan-CNY\">￥{getSum(CNY) ? getSum(CNY) : 0}</span>\r\n          <span className=\"plan-RUB\">₽{getSum(RUB) ? getSum(RUB) : 0}</span>\r\n        </p>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","// import logo from './logo.svg';\nimport Index from \"./component/demo\";\nimport InputTask from \"./component/InputTask\";\nimport CurrencyRate from \"./component/CurrencyRate\";\nimport Plan from \"./component/Plan\";\nimport Finished from \"./component/Finished\";\nimport \"./App.css\";\nimport \"./css/InputTask.css\";\nimport \"./css/CurrencyRate.css\";\n\nimport getForex from \"./api/getForex\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n  // const [CCY, setCCY] = useState([\"RUB\", \"CNY\", \"USD\"]);\n  const CCY = [\"RUB\", \"CNY\", \"USD\"];\n  const [rate, setRate] = useState({});\n\n  const [job, setJob] = useState([\n    // {\n    //   id: 1,\n    //   finished: false,\n    //   plan: \"去吃麻辣烫\",\n    //   RUB: 1,\n    //   CNY: 0.08707,\n    //   USD: 0.01323,\n    // },\n    // {\n    //   id: 2,\n    //   finished: true,\n    //   plan: \"去吃海底捞\",\n    //   RUB: 12,\n    //   CNY: 0.7,\n    //   USD: 0.23,\n    // },\n    // {\n    //   id: 5,\n    //   finished: false,\n    //   plan: \"去学习\",\n    //   RUB: 1121,\n    //   CNY: 707,\n    //   USD: 1323,\n    // },\n  ]);\n  useEffect(() => {\n    getForex().then((resolve) => {\n      console.log(resolve);\n      setRate(resolve);\n    });\n  }, []);\n\n  function addPlan(plan) {\n    //添加新计划\n    console.log(plan);\n    if (plan) {\n      return setJob([...job, plan]);\n    } else {\n      return;\n    }\n  }\n  function clickPlan(plan) {\n    // 完成和未完成\n    setJob(\n      job.map((item) => {\n        if (item.id === plan) {\n          return { ...item, finished: !item.finished };\n        } else {\n          return item;\n        }\n      })\n    );\n  }\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n      {/* {sum.USD && <div>{sum.USD.value}</div>} */}\n      {/* {sum && <Index force={sum} aas={(item) => aa(item)}></Index>} */}\n      <InputTask\n        CCY={CCY}\n        addPlan={(item) => addPlan(item)}\n        rate={rate}\n      ></InputTask>\n      {rate.USD && <CurrencyRate rate={rate}></CurrencyRate>}\n      {job.length !== 0 && (\n        <Plan job={job} clickPlan={clickPlan} rate={rate} CCY={CCY}></Plan>\n      )}\n      {rate.USD && job.length !== 0 && (\n        <Finished\n          job={job}\n          clickPlan={clickPlan}\n          rate={rate}\n          CCY={CCY}\n        ></Finished>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","export default function getForex() {\r\n  return fetch(\"https://api.globus.furniture/forex\").then((response) => {\r\n    return response.json();\r\n  });\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}